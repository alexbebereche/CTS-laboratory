Code review

1. Code structure and naming conventions

- the package name is too generic; where is the module?
- the class name is saying nothing;
- the function name is too generic
- the function arguments names are not OK
- t and s must have meaningful names


2. Implementation
- too many "magic numbers" (hard-coded value)
- is t limited to {1,2,3,4} or it can be bigger?
- there are no validations for t, s, and perioada

3. Single responsability & KISS
- outsource the intermediary operations into new simple functions

*seminar 4*
4. Reduce the complexity of the existing functions - KISS
- reduce the complexity from the getPriceWithDiscount - repeating pattern
- remove the switch by refactoring the 1st case

5. Single Responsability & Dependency Inversion (DIP) - P is from principle
- refactor the custom exceptions framework
- remove the dependency on how we validate the price and the account age
- remove the dependency on values and operations that are managed by Marketing Department
